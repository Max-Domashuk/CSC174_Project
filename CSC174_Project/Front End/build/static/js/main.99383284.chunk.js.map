{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","NAME","setName","ADDRESS","setAddress","CITY","setCity","PID","setPid","FIRST_NAME","setFname","LAST_NAME","setLname","SEX","setSex","HOSPITAL_NAME","setHospital","EID","setEid","SALARY","setSalary","BIRTHDATE","setBirthdate","HOSP_NAME","setHosp","hospitalList","setHospitalList","patientList","setPatientList","employeeList","setEmployeeList","className","type","onChange","event","target","value","onClick","Axios","post","then","console","log","get","response","data","map","val","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99383284.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from \"react\";\nimport Axios from \"axios\";\n\nfunction App() {\n  // Hospital\n  const [NAME, setName] = useState(\"\");\n  const [ADDRESS, setAddress] = useState(\"\");\n  const [CITY, setCity] = useState(\"\");\n\n  // Patient\n  const [PID, setPid] = useState(\"\");\n  const [FIRST_NAME, setFname] = useState(\"\");\n  const [LAST_NAME, setLname] = useState(\"\");\n  const [SEX, setSex] = useState(\"\");\n  const [HOSPITAL_NAME, setHospital] = useState(\"\");\n\n  // Employee\n  const [EID, setEid] = useState(\"\");\n  const [SALARY, setSalary] = useState(\"\");\n  const [BIRTHDATE, setBirthdate] = useState(\"\");\n  const [HOSP_NAME, setHosp] = useState(\"\");\n\n\n  const[hospitalList, setHospitalList] = useState([]);\n  const[patientList, setPatientList] = useState([]);\n  const[employeeList, setEmployeeList] = useState([]);\n \n\n  const addHospital = () => {\n    Axios.post(\"https://csc174-hospital.herokuapp.com/create\", {\n      NAME: NAME, \n      ADDRESS: ADDRESS, \n      CITY: CITY,\n    }).then(() => {\n      console.log(\"Success\");\n    });\n  };\n\n  const addPatient = () => {\n    Axios.post(\"https://csc174-hospital.herokuapp.com/createPatient\", {\n      PID: PID, \n      FIRST_NAME: FIRST_NAME, \n      LAST_NAME: LAST_NAME,\n      SEX: SEX,\n      HOSPITAL_NAME: HOSPITAL_NAME,\n    }).then(() => {\n      console.log(\"Success\");\n    });\n  };\n\n  const addEmployee = () => {\n    Axios.post(\"https://csc174-hospital.herokuapp.com/createEmployee\", {\n      EID: EID, \n      SALARY: SALARY, \n      BIRTHDATE: BIRTHDATE,\n      HOSP_NAME: HOSP_NAME,\n    }).then(() => {\n      console.log(\"Success\");\n    });\n  };\n\nconst getHospitals = () => {\n  Axios.get(\"https://csc174-hospital.herokuapp.com/Hospitals\").then((response) => {\n    setHospitalList(response.data);\n  });\n};\nconst getPatients= () => {\n  Axios.get(\"https://csc174-hospital.herokuapp.com/Patients\").then((response) => {\n    setPatientList(response.data);\n  });\n};\nconst getEmployees= () => {\n  Axios.get(\"https://csc174-hospital.herokuapp.com/Employees\").then((response) => {\n    setEmployeeList(response.data);\n  });\n};\n\n  return (\n  <div className=\"App\">\n    <div className=\"information\">\n    <label>NAME:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setName(event.target.value);\n    }}\n     />\n    <label>ADDRESS:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setAddress(event.target.value);\n    }}\n     />\n    <label>CITY:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setCity(event.target.value);\n    }}\n     />\n    <button onClick={addHospital}>Add Hospital</button>\n    </div>\n\n    <div className=\"patientInfo\">\n    <label>PID:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setPid(event.target.value);\n    }}\n     />\n    <label>FIRST_NAME:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setFname(event.target.value);\n    }}\n     />\n    <label>LAST_NAME:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setLname(event.target.value);\n    }}\n     />\n     <label>SEX:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setSex(event.target.value);\n    }}\n     />\n     <label>HOSPITAL_NAME:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setHospital(event.target.value);\n    }}\n     />\n    <button onClick={addPatient}>Add Patient</button>\n    </div> \n  \n <div className=\"Hospitals\">\n  <button onClick={getHospitals}>Show Hospitals</button>\n\n  {hospitalList.map((val,key) => {\n    return(\n      <div className=\"Hosp\">\n       <h3>Hospital Table - </h3>\n       <h3>Name: {val.NAME}</h3>\n       <h3>Address: {val.ADDRESS}</h3>\n       <h3>City: {val.CITY}</h3>\n      </div>\n  );\n})}\n    </div>\n\n    <div className=\"Patients\">\n  <button onClick={getPatients}>Show Patients</button>\n\n  {patientList.map((val,key) => {\n    return(\n      <div className=\"Pat\">\n        <h3>Patient Table -</h3>\n       <h3>PID: {val.PID}</h3>\n       <h3>First Name: {val.FIRST_NAME}</h3>\n       <h3>Last Name: {val.LAST_NAME}</h3>\n       <h3>Sex: {val.SEX}</h3>\n       <h3>Hospital Name: {val.HOSPITAL_NAME}</h3>\n      </div>\n  );\n})}\n    </div>\n\n\n    <div className=\"employeeInfo\">\n    <label>EID:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setEid(event.target.value);\n    }}\n     />\n    <label>SALARY:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setSalary(event.target.value);\n    }}\n     />\n    <label>BIRTHDATE:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setBirthdate(event.target.value);\n    }}\n     />\n     <label>HOSPITAL_NAME:</label>\n    <input \n    type=\"text\"\n    onChange={(event) => {\n      setHosp(event.target.value);\n    }}\n     />\n    <button onClick={addEmployee}>Add Employee</button>\n    </div> \n  \n <div className=\"Employees\">\n  <button onClick={getEmployees}>Show Employees</button>\n\n  {employeeList.map((val,key) => {\n    return(\n      <div className=\"Emp\">\n       <h3>Employee Table - </h3>\n       <h3>EID: {val.EID}</h3>\n       <h3>Salary: {val.SALARY}</h3>\n       <h3>Birthdate: {val.BIRTHDATE}</h3>\n       <h3>Hospital Name: {val.HOSP_NAME}</h3>\n      </div>\n  );\n})}\n    </div>\n\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}